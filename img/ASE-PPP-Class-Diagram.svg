<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1531px" height="884px" viewBox="-0.5 -0.5 1531 884" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-04-04T07:39:17.961Z&quot; agent=&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/17.2.4 Chrome/96.0.4664.174 Electron/16.1.0 Safari/537.36&quot; etag=&quot;MjyUmsvT_wgDglefgXee&quot; version=&quot;17.2.4&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-119-31-102-26-0"><rect x="119" y="31" width="102" height="26"/></clipPath><clipPath id="mx-clip-119-57-102-26-0"><rect x="119" y="57" width="102" height="26"/></clipPath><clipPath id="mx-clip-4-251-331-26-0"><rect x="4" y="251" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-277-331-26-0"><rect x="4" y="277" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-303-331-26-0"><rect x="4" y="303" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-337-331-26-0"><rect x="4" y="337" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-363-331-26-0"><rect x="4" y="363" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-389-331-26-0"><rect x="4" y="389" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-415-331-26-0"><rect x="4" y="415" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-441-331-26-0"><rect x="4" y="441" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-467-331-68-0"><rect x="4" y="467" width="331" height="68"/></clipPath><clipPath id="mx-clip-4-535-331-80-0"><rect x="4" y="535" width="331" height="80"/></clipPath><clipPath id="mx-clip-4-615-331-70-0"><rect x="4" y="615" width="331" height="70"/></clipPath><clipPath id="mx-clip-4-685-331-80-0"><rect x="4" y="685" width="331" height="80"/></clipPath><clipPath id="mx-clip-4-765-331-26-0"><rect x="4" y="765" width="331" height="26"/></clipPath><clipPath id="mx-clip-4-791-331-94-0"><rect x="4" y="791" width="331" height="94"/></clipPath><clipPath id="mx-clip-1014-31-512-26-0"><rect x="1014" y="31" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-57-512-26-0"><rect x="1014" y="57" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-83-512-26-0"><rect x="1014" y="83" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-117-512-26-0"><rect x="1014" y="117" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-143-512-26-0"><rect x="1014" y="143" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-169-512-26-0"><rect x="1014" y="169" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-195-512-26-0"><rect x="1014" y="195" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-229-512-26-0"><rect x="1014" y="229" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-436-512-26-0"><rect x="1014" y="436" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-462-512-68-0"><rect x="1014" y="462" width="512" height="68"/></clipPath><clipPath id="mx-clip-1014-833-512-26-0"><rect x="1014" y="833" width="512" height="26"/></clipPath><clipPath id="mx-clip-1014-859-512-26-0"><rect x="1014" y="859" width="512" height="26"/></clipPath><clipPath id="mx-clip-404-31-512-26-0"><rect x="404" y="31" width="512" height="26"/></clipPath><clipPath id="mx-clip-404-57-512-26-0"><rect x="404" y="57" width="512" height="26"/></clipPath><clipPath id="mx-clip-404-83-512-26-0"><rect x="404" y="83" width="512" height="26"/></clipPath><clipPath id="mx-clip-404-117-512-78-0"><rect x="404" y="117" width="512" height="78"/></clipPath><clipPath id="mx-clip-404-195-512-120-0"><rect x="404" y="195" width="512" height="120"/></clipPath><clipPath id="mx-clip-404-315-512-80-0"><rect x="404" y="315" width="512" height="80"/></clipPath><clipPath id="mx-clip-404-395-512-26-0"><rect x="404" y="395" width="512" height="26"/></clipPath><clipPath id="mx-clip-404-421-512-94-0"><rect x="404" y="421" width="512" height="94"/></clipPath><clipPath id="mx-clip-404-515-512-50-0"><rect x="404" y="515" width="512" height="50"/></clipPath><clipPath id="mx-clip-404-565-512-120-0"><rect x="404" y="565" width="512" height="120"/></clipPath><clipPath id="mx-clip-404-685-512-90-0"><rect x="404" y="685" width="512" height="90"/></clipPath><clipPath id="mx-clip-404-775-512-110-0"><rect x="404" y="775" width="512" height="110"/></clipPath></defs><g><path d="M 114.5 26 L 114.5 0 L 224.5 0 L 224.5 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 114.5 26 L 114.5 78 L 224.5 78 L 224.5 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 114.5 26 L 224.5 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="169" y="17.5">Edge</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-119-31-102-26-0)" font-size="12px"><text x="120" y="43.5">+ From: int</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-119-57-102-26-0)" font-size="12px"><text x="120" y="69.5">+ To: Int</text></g><path d="M 0 246 L 0 220 L 339 220 L 339 246" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 246 L 0 880 L 339 880 L 339 246" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 246 L 339 246" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="169" y="237.5">Graph</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-251-331-26-0)" font-size="12px"><text x="5.5" y="263.5">- _edges: Dictionary&lt;int, List&lt;Edge&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-277-331-26-0)" font-size="12px"><text x="5.5" y="289.5">- _weights: Dictionary&lt;int, int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-303-331-26-0)" font-size="12px"><text x="5.5" y="315.5">- _inDegrees: List&lt;int&gt;</text></g><path d="M 0 328 L 339 328" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-337-331-26-0)" font-size="12px"><text x="5.5" y="349.5">+ AddNode(id: int, weight: int): void</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-363-331-26-0)" font-size="12px"><text x="5.5" y="375.5">+ AddEdge(from: int, to: int): void</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-389-331-26-0)" font-size="12px"><text x="5.5" y="401.5">- AddEdge(edge: Edge): void</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-415-331-26-0)" font-size="12px"><text x="5.5" y="427.5">+ HasCircle(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-441-331-26-0)" font-size="12px"><text x="5.5" y="453.5">- DagTopoSort(): IEnumerable&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-467-331-68-0)" font-size="12px"><text x="5.5" y="479.5">+ FindLongestChainRecursive(</text><text x="5.5" y="493.5">      head: Func&lt;int, bool&gt;,</text><text x="5.5" y="507.5">      tail: Func&lt;int, bool&gt;</text><text x="5.5" y="521.5">  ): List&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-535-331-80-0)" font-size="12px"><text x="5.5" y="547.5">- FindLongestChainWithSourceRecursive(</text><text x="5.5" y="561.5">      u: int,</text><text x="5.5" y="575.5">      tail: Func&lt;int, bool&gt;,</text><text x="5.5" y="589.5">      curChain: IList&lt;int&gt;</text><text x="5.5" y="603.5">  ): void</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-615-331-70-0)" font-size="12px"><text x="5.5" y="627.5">+ DagFindLongestChain(</text><text x="5.5" y="641.5">      head: Func&lt;int, bool&gt;,</text><text x="5.5" y="655.5">      tail: Func&lt;int, bool&gt;</text><text x="5.5" y="669.5">  ): List&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-685-331-80-0)" font-size="12px"><text x="5.5" y="697.5">- DagFindLongestChainWithSource(</text><text x="5.5" y="711.5">      source: int,</text><text x="5.5" y="725.5">      visited: ISet&lt;int&gt;,</text><text x="5.5" y="739.5">      tail: Func&lt;int, bool&gt;</text><text x="5.5" y="753.5">  ): (List&lt;int&gt;, int)</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-765-331-26-0)" font-size="12px"><text x="5.5" y="777.5">+ FindAllChains(): List&lt;List&lt;int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-4-791-331-94-0)" font-size="12px"><text x="5.5" y="803.5">- FindPath(</text><text x="5.5" y="817.5">      u: int,</text><text x="5.5" y="831.5">      curChain: IList&lt;int&gt;,</text><text x="5.5" y="845.5">      chainSet: ISet&lt;int&gt;,</text><text x="5.5" y="859.5">      chains: ICollection&lt;List&lt;int&gt;&gt;</text><text x="5.5" y="873.5">  ): void</text></g><path d="M 1010 26 L 1010 0 L 1530 0 L 1530 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 26 L 1010 250 L 1530 250 L 1530 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 26 L 1530 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1269.5" y="17.5">WordMap</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-31-512-26-0)" font-size="12px"><text x="1015.5" y="43.5">- _wordToId: Dictionary&lt;string, int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-57-512-26-0)" font-size="12px"><text x="1015.5" y="69.5">- _idToWord: Dictionary&lt;int, string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-83-512-26-0)" font-size="12px"><text x="1015.5" y="95.5">- _wordCount: int</text></g><path d="M 1010 108 L 1530 108" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-117-512-26-0)" font-size="12px"><text x="1015.5" y="129.5">+ AddWord(word: string): int</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-143-512-26-0)" font-size="12px"><text x="1015.5" y="155.5">+ GetWord(id: int): string</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-169-512-26-0)" font-size="12px"><text x="1015.5" y="181.5">+ GetId(word: string): int</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-195-512-26-0)" font-size="12px"><text x="1015.5" y="207.5">+ GetAllWords(): IEnumerable&lt;string&gt;</text></g><path d="M 1010 220 L 1530 220" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-229-512-26-0)" font-size="12px"><text x="1015.5" y="241.5">+ Build(wordList: List&lt;string&gt;): WordMap                    &lt;&lt;static&gt;&gt;</text></g><path d="M 1010 431 L 1010 405 L 1530 405 L 1530 431" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 431 L 1010 525 L 1530 525 L 1530 431" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 431 L 1530 431" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1269.5" y="422.5">WordChainHandler</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-436-512-26-0)" font-size="12px"><text x="1015.5" y="448.5">+ BuildAlphaGraph(wordMap: WordMap): Graph                  &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-462-512-68-0)" font-size="12px"><text x="1015.5" y="474.5">+ BuildWordGraph(</text><text x="1015.5" y="488.5">      wordMap: WordMap,</text><text x="1015.5" y="502.5">      calcWeight: Func&lt;string, int&gt;</text><text x="1015.5" y="516.5">  ): Graph                                                  &lt;&lt;static&gt;&gt;</text></g><path d="M 1010 828 L 1010 802 L 1530 802 L 1530 828" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 828 L 1010 880 L 1530 880 L 1530 828" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 828 L 1530 828" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1269.5" y="819.5">CharConverter</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-833-512-26-0)" font-size="12px"><text x="1015.5" y="845.5">+ ReadFromBytePtrArray(bytes: byte**, len: int)             &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-1014-859-512-26-0)" font-size="12px"><text x="1015.5" y="871.5">+ WriteToBytePtrArray(buffer: List&lt;string&gt;, bytes: byte**)  &lt;&lt;static&gt;&gt;</text></g><path d="M 400 26 L 400 0 L 920 0 L 920 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 26 L 400 880 L 920 880 L 920 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 400 26 L 920 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" font-weight="bold" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="659.5" y="17.5">WordChainCoreInterface</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-31-512-26-0)" font-size="12px"><text x="405.5" y="43.5">+ ResultBufferMax: int = 20000                               &lt;&lt;const&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-57-512-26-0)" font-size="12px"><text x="405.5" y="69.5">+ ErrorHasCircle: int = -1                                   &lt;&lt;const&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-83-512-26-0)" font-size="12px"><text x="405.5" y="95.5">+ ErrorBufferOverflow: int = -2                              &lt;&lt;const&gt;&gt;</text></g><path d="M 400 108 L 920 108" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-117-512-78-0)" font-size="12px"><text x="405.5" y="129.5">+ gen_chains_all(</text><text x="405.5" y="143.5">      words: byte**,</text><text x="405.5" y="157.5">      len: int,</text><text x="405.5" y="171.5">      result: byte**</text><text x="405.5" y="185.5">  ): int                                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-195-512-120-0)" font-size="12px"><text x="405.5" y="207.5">+ gen_chain_word(</text><text x="405.5" y="221.5">      words: byte**,</text><text x="405.5" y="235.5">      len: int,</text><text x="405.5" y="249.5">      result: byte**,</text><text x="405.5" y="263.5">      head: byte,</text><text x="405.5" y="277.5">      tail: byte,</text><text x="405.5" y="291.5">      enableLoop: bool</text><text x="405.5" y="305.5">  ): int                                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-315-512-80-0)" font-size="12px"><text x="405.5" y="327.5">+ gen_chain_word_unique(</text><text x="405.5" y="341.5">      words: byte**,</text><text x="405.5" y="355.5">      len: int,</text><text x="405.5" y="369.5">      result: byte**</text><text x="405.5" y="383.5">  ): int                                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-395-512-26-0)" font-size="12px"><text x="405.5" y="407.5">+ GenChainsAll(words: List&lt;string&gt;): (int, List&lt;string&gt;)    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-421-512-94-0)" font-size="12px"><text x="405.5" y="433.5">+ GenChainWord(</text><text x="405.5" y="447.5">      words: List&lt;string&gt;,</text><text x="405.5" y="461.5">      head: char,</text><text x="405.5" y="475.5">      tail: char,</text><text x="405.5" y="489.5">      enableLoop: bool</text><text x="405.5" y="503.5">  ): (int, List&lt;string&gt;)                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-515-512-50-0)" font-size="12px"><text x="405.5" y="527.5">+ GenChainWordUnique(</text><text x="405.5" y="541.5">      words: List&lt;string&gt;</text><text x="405.5" y="555.5">  ): (int, List&lt;string&gt;)                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-565-512-120-0)" font-size="12px"><text x="405.5" y="577.5">+ gen_chain_char(</text><text x="405.5" y="591.5">      words: byte**,</text><text x="405.5" y="605.5">      len: int,</text><text x="405.5" y="619.5">      result: byte**,</text><text x="405.5" y="633.5">      head: byte,</text><text x="405.5" y="647.5">      tail: byte,</text><text x="405.5" y="661.5">      enableLoop: bool</text><text x="405.5" y="675.5">  ): int                                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-685-512-90-0)" font-size="12px"><text x="405.5" y="697.5">+ GenChainChar(</text><text x="405.5" y="711.5">      words: List&lt;string&gt;,</text><text x="405.5" y="725.5">      head: char,</text><text x="405.5" y="739.5">      tail: char,</text><text x="405.5" y="753.5">      enableLoop: bool</text><text x="405.5" y="767.5">  ): (int, List&lt;string&gt;)                                    &lt;&lt;static&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Courier New" pointer-events="none" clip-path="url(#mx-clip-404-775-512-110-0)" font-size="12px"><text x="405.5" y="787.5">- GenChainMaxLength(</text><text x="405.5" y="801.5">      words: List&lt;string&gt;,</text><text x="405.5" y="815.5">      head: char,</text><text x="405.5" y="829.5">      tail: char,</text><text x="405.5" y="843.5">      enableLoop: bool,</text><text x="405.5" y="857.5">      calcWeight: Func&lt;string, int&gt;</text><text x="405.5" y="871.5">  ): (int, List&lt;string&gt;)                                    &lt;&lt;static&gt;&gt;</text></g><path d="M 920 305.74 L 1025.95 251.03" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1018.37 262.25 L 1026.94 250.51 L 1012.41 250.7" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 278px; margin-left: 973px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">Use</div></div></div></foreignObject><text x="973" y="282" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 920 450.66 L 1007.77 454.25" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 995.63 460.26 L 1008.88 454.3 L 996.16 447.27" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 452px; margin-left: 965px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">Use</div></div></div></foreignObject><text x="965" y="456" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 920 610.92 L 1208.8 800.77" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1195.31 799.68 L 1209.74 801.39 L 1202.45 788.81" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 706px; margin-left: 1065px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">Use</div></div></div></foreignObject><text x="1065" y="710" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 169.5 220 L 169.5 80.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 176 92.12 L 169.5 79.12 L 163 92.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 149px; margin-left: 170px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">Use</div></div></div></foreignObject><text x="170" y="153" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 400 498.31 L 341.18 511.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 351.35 502.56 L 340.09 511.74 L 354.2 515.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 505px; margin-left: 370px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: &quot;Courier New&quot;; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">Use</div></div></div></foreignObject><text x="370" y="508" fill="rgb(0, 0, 0)" font-family="Courier New" font-size="11px" text-anchor="middle">Use</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>